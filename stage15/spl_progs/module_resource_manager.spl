// Function number in R1 and PID in R2
alias funcNum R1;
alias currentPID R2;
alias returnValue R0;

if (funcNum == 8) then
    if ([TERMINAL_STATUS_TABLE] == 1) then
        [PROCESS_TABLE + (currentPID * 16) + 4] = WAIT_TERMINAL;
        multipush(R0, R1, R2);
        call BOOT_MODULE;
        multipop(R0, R1, R2);
    endif;
    [TERMINAL_STATUS_TABLE] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currentPID;
    return;
else
    if (funcNum == 9) then
        if ([TERMINAL_STATUS_TABLE + 1] == currentPID) then
            [TERMINAL_STATUS_TABLE] = 0;
            alias newPID R3;
            alias newProcessTable R4;
            newPID = 1;
            newProcessTable = PROCESS_TABLE + (newPID * 16);
            while (newPID < 16) do
                if ([newProcessTable + 4] == WAIT_TERMINAL) then
                    [newProcessTable + 4] = READY;
                endif;
                newPID = newPID + 1;
                newProcessTable = PROCESS_TABLE + (newPID * 16);
            endwhile;
            returnValue = 0;
            return;
        else
            returnValue = -1;
            return;
        endif;
    endif;
endif;