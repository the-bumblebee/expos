// Load module 7-boot module from disk blocks 67, 68 to physical pages 54, 55
loadi(54, 67);
loadi(55, 68);

//Loads idle program from disk blocks 11 to physical pages 69
// page 70 used as stack
loadi(69,11);


SP = 82 * 512 - 1;

call BOOT_MODULE;

// Setting Page Table entry for idle program
// Code: 69     Heap: -    Stack: 70   UArea page: 76 // 2nd code page used as stack
PTBR=PAGE_TABLE_BASE;
//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";
//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";
//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
//Stack
[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//Process table for idle
// PID = 0, STATE = RUNNING, UAPage = 76, KPTR = 0, UPTR = 8*512, PTBR, PTLR
[PROCESS_TABLE + 1] = 0;
[PROCESS_TABLE + 4] = RUNNING;
[PROCESS_TABLE + 11] = 76;
[PROCESS_TABLE + 12] = 0;
[PROCESS_TABLE + 13] = 8 * 512;
[PROCESS_TABLE + 14] = PTBR;
[PROCESS_TABLE + 15] = 10;

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//Setting entry point for idle
[70 * 512] = [69 * 512 + 1];

//System status table, PID = 0 for idle
[SYSTEM_STATUS_TABLE + 1] = 0;

SP = 8 * 512;

ireturn;